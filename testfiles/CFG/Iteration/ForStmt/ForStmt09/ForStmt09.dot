digraph G {
graph [splines=ortho, nodesep="1", ranksep="1"]
node [shape=rect, fontname=Arial];
{ rank = same; "Program[0]"}
{ rank = same; "List[1]"}
{ rank = same; "CompilationUnit[2]"}
{ rank = same; "List[3]"; "List[4]"}
{ rank = same; "ClassDecl[5]"}
{ rank = same; "Modifiers[22]"; "Opt[25]"; "List[26]"; "List[27]"; "InstanceInitialization[6]"; "InstanceInitialization[14]"}
{ rank = same; "List[23]"; "InstanceInitializer[28]"; "Entry[7]"; "Exit[8]"; "Entry[15]"; "Exit[16]"}
{ rank = same; "Modifier[24]"; "Block[29]"}
{ rank = same; "List[30]"}
{ rank = same; "VarDeclStmt[31]"; "VarDeclStmt[40]"; "ForStmt[49]"; "VarDeclStmt[66]"}
{ rank = same; "Modifiers[32]"; "PrimitiveTypeAccess[34]"; "List[35]"; "Modifiers[41]"; "PrimitiveTypeAccess[43]"; "List[44]"; "List[50]"; "Opt[51]"; "List[59]"; "Block[60]"; "Modifiers[67]"; "PrimitiveTypeAccess[69]"; "List[70]"}
{ rank = same; "List[33]"; "VariableDeclarator[36]"; "List[42]"; "VariableDeclarator[45]"; "AndLogicalExpr[52]"; "List[61]"; "List[68]"; "VariableDeclarator[71]"}
{ rank = same; "List[37]"; "Opt[38]"; "List[46]"; "Opt[47]"; "LTExpr[53]"; "GTExpr[56]"; "ExprStmt[62]"; "List[72]"; "Opt[73]"}
{ rank = same; "IntegerLiteral[39]"; "IntegerLiteral[48]"; "VarAccess[54]"; "IntegerLiteral[55]"; "VarAccess[57]"; "IntegerLiteral[58]"; "AssignSimpleExpr[63]"}
{ rank = same; "VarAccess[64]"; "IntegerLiteral[65]"}
"Program[0]" [label="Program\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"List[1]" [label="List\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"CompilationUnit[2]" [label="CompilationUnit\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"List[3]" [label="List\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"List[4]" [label="List\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"ClassDecl[5]" [label="ClassDecl\n < ForStmt09 >", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"Modifiers[22]" [label="Modifiers\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"List[23]" [label="List\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"Modifier[24]" [label="Modifier\n < public >", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"Opt[25]" [label="Opt\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"List[26]" [label="List\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"List[27]" [label="List\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"InstanceInitializer[28]" [label="InstanceInitializer\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"Block[29]" [label="Block\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"List[30]" [label="List\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"VarDeclStmt[31]" [label="VarDeclStmt\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"Modifiers[32]" [label="Modifiers\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"List[33]" [label="List\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"PrimitiveTypeAccess[34]" [label="PrimitiveTypeAccess\n < int >", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"List[35]" [label="List\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"VariableDeclarator[36]" [label="VariableDeclarator\n < i >", fillcolor=white   style=filled  ]
"List[37]" [label="List\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"Opt[38]" [label="Opt\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"IntegerLiteral[39]" [label="IntegerLiteral\n < 0 >", fillcolor=white   style=filled  ]
"VarDeclStmt[40]" [label="VarDeclStmt\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"Modifiers[41]" [label="Modifiers\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"List[42]" [label="List\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"PrimitiveTypeAccess[43]" [label="PrimitiveTypeAccess\n < int >", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"List[44]" [label="List\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"VariableDeclarator[45]" [label="VariableDeclarator\n < j >", fillcolor=white   style=filled  ]
"List[46]" [label="List\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"Opt[47]" [label="Opt\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"IntegerLiteral[48]" [label="IntegerLiteral\n < 0 >", fillcolor=white   style=filled  ]
"ForStmt[49]" [label="ForStmt\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"List[50]" [label="List\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"Opt[51]" [label="Opt\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"AndLogicalExpr[52]" [label="AndLogicalExpr\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"LTExpr[53]" [label="LTExpr\n ", fillcolor=white   style=filled  ]
"VarAccess[54]" [label="VarAccess\n < i >", fillcolor=white   style=filled  ]
"IntegerLiteral[55]" [label="IntegerLiteral\n < 10 >", fillcolor=white   style=filled  ]
"GTExpr[56]" [label="GTExpr\n ", fillcolor=white   style=filled  ]
"VarAccess[57]" [label="VarAccess\n < j >", fillcolor=white   style=filled  ]
"IntegerLiteral[58]" [label="IntegerLiteral\n < 10 >", fillcolor=white   style=filled  ]
"List[59]" [label="List\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"Block[60]" [label="Block\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"List[61]" [label="List\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"ExprStmt[62]" [label="ExprStmt\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"AssignSimpleExpr[63]" [label="AssignSimpleExpr\n < i >", fillcolor=white   style=filled  ]
"VarAccess[64]" [label="VarAccess\n < i >", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"IntegerLiteral[65]" [label="IntegerLiteral\n < 8 >", fillcolor=white   style=filled  ]
"VarDeclStmt[66]" [label="VarDeclStmt\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"Modifiers[67]" [label="Modifiers\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"List[68]" [label="List\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"PrimitiveTypeAccess[69]" [label="PrimitiveTypeAccess\n < int >", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"List[70]" [label="List\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"VariableDeclarator[71]" [label="VariableDeclarator\n < c >", fillcolor=white   style=filled  ]
"List[72]" [label="List\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"Opt[73]" [label="Opt\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"InstanceInitialization[6]" [label="InstanceInitialization\n < Instance >", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"Entry[7]" [label="Entry\n ", fillcolor=white   style=filled  ]
"Exit[8]" [label="Exit\n ", fillcolor=white   style=filled  ]
"InstanceInitialization[14]" [label="InstanceInitialization\n < Static >", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"Entry[15]" [label="Entry\n ", fillcolor=white   style=filled  ]
"Exit[16]" [label="Exit\n ", fillcolor=white   style=filled  ]
"CompilationUnit[2]" -> "List[3]" [style=dashed, color=gray]
"List[23]" -> "Modifier[24]" [style=dashed, color=gray]
"Modifiers[22]" -> "List[23]" [style=dashed, color=gray]
"ClassDecl[5]" -> "Modifiers[22]" [style=dashed, color=gray]
"ClassDecl[5]" -> "Opt[25]" [style=dashed, color=gray]
"ClassDecl[5]" -> "List[26]" [style=dashed, color=gray]
"Modifiers[32]" -> "List[33]" [style=dashed, color=gray]
"VarDeclStmt[31]" -> "Modifiers[32]" [style=dashed, color=gray]
"VarDeclStmt[31]" -> "PrimitiveTypeAccess[34]" [style=dashed, color=gray]
"VariableDeclarator[36]" -> "List[37]" [style=dashed, color=gray]
"Opt[38]" -> "IntegerLiteral[39]" [style=dashed, color=gray]
"VariableDeclarator[36]" -> "Opt[38]" [style=dashed, color=gray]
"List[35]" -> "VariableDeclarator[36]" [style=dashed, color=gray]
"VarDeclStmt[31]" -> "List[35]" [style=dashed, color=gray]
"List[30]" -> "VarDeclStmt[31]" [style=dashed, color=gray]
"Modifiers[41]" -> "List[42]" [style=dashed, color=gray]
"VarDeclStmt[40]" -> "Modifiers[41]" [style=dashed, color=gray]
"VarDeclStmt[40]" -> "PrimitiveTypeAccess[43]" [style=dashed, color=gray]
"VariableDeclarator[45]" -> "List[46]" [style=dashed, color=gray]
"Opt[47]" -> "IntegerLiteral[48]" [style=dashed, color=gray]
"VariableDeclarator[45]" -> "Opt[47]" [style=dashed, color=gray]
"List[44]" -> "VariableDeclarator[45]" [style=dashed, color=gray]
"VarDeclStmt[40]" -> "List[44]" [style=dashed, color=gray]
"List[30]" -> "VarDeclStmt[40]" [style=dashed, color=gray]
"ForStmt[49]" -> "List[50]" [style=dashed, color=gray]
"LTExpr[53]" -> "VarAccess[54]" [style=dashed, color=gray]
"LTExpr[53]" -> "IntegerLiteral[55]" [style=dashed, color=gray]
"AndLogicalExpr[52]" -> "LTExpr[53]" [style=dashed, color=gray]
"GTExpr[56]" -> "VarAccess[57]" [style=dashed, color=gray]
"GTExpr[56]" -> "IntegerLiteral[58]" [style=dashed, color=gray]
"AndLogicalExpr[52]" -> "GTExpr[56]" [style=dashed, color=gray]
"Opt[51]" -> "AndLogicalExpr[52]" [style=dashed, color=gray]
"ForStmt[49]" -> "Opt[51]" [style=dashed, color=gray]
"ForStmt[49]" -> "List[59]" [style=dashed, color=gray]
"AssignSimpleExpr[63]" -> "VarAccess[64]" [style=dashed, color=gray]
"AssignSimpleExpr[63]" -> "IntegerLiteral[65]" [style=dashed, color=gray]
"ExprStmt[62]" -> "AssignSimpleExpr[63]" [style=dashed, color=gray]
"List[61]" -> "ExprStmt[62]" [style=dashed, color=gray]
"Block[60]" -> "List[61]" [style=dashed, color=gray]
"ForStmt[49]" -> "Block[60]" [style=dashed, color=gray]
"List[30]" -> "ForStmt[49]" [style=dashed, color=gray]
"Modifiers[67]" -> "List[68]" [style=dashed, color=gray]
"VarDeclStmt[66]" -> "Modifiers[67]" [style=dashed, color=gray]
"VarDeclStmt[66]" -> "PrimitiveTypeAccess[69]" [style=dashed, color=gray]
"VariableDeclarator[71]" -> "List[72]" [style=dashed, color=gray]
"VariableDeclarator[71]" -> "Opt[73]" [style=dashed, color=gray]
"List[70]" -> "VariableDeclarator[71]" [style=dashed, color=gray]
"VarDeclStmt[66]" -> "List[70]" [style=dashed, color=gray]
"List[30]" -> "VarDeclStmt[66]" [style=dashed, color=gray]
"Block[29]" -> "List[30]" [style=dashed, color=gray]
"InstanceInitializer[28]" -> "Block[29]" [style=dashed, color=gray]
"List[27]" -> "InstanceInitializer[28]" [style=dashed, color=gray]
"ClassDecl[5]" -> "List[27]" [style=dashed, color=gray]
"InstanceInitialization[6]" -> "Entry[7]" [style=dashed, color=gray]
"InstanceInitialization[6]" -> "Exit[8]" [style=dashed, color=gray]
"InstanceInitialization[14]" -> "Entry[15]" [style=dashed, color=gray]
"InstanceInitialization[14]" -> "Exit[16]" [style=dashed, color=gray]
"ClassDecl[5]" -> "InstanceInitialization[6]" [style=dashed, color=gray]
"ClassDecl[5]" -> "InstanceInitialization[14]" [style=dashed, color=gray]
"List[4]" -> "ClassDecl[5]" [style=dashed, color=gray]
"CompilationUnit[2]" -> "List[4]" [style=dashed, color=gray]
"List[1]" -> "CompilationUnit[2]" [style=dashed, color=gray]
"Program[0]" -> "List[1]" [style=dashed, color=gray]
"Exit[16]" -> "Entry[15]" [color=red, constraint=false]
"Entry[15]" -> "Exit[16]" [color=blue, constraint=false, xlabel=" "] 
"AssignSimpleExpr[63]" -> "VarAccess[54]" [color=blue, constraint=false, xlabel=" "] 
"AssignSimpleExpr[63]" -> "IntegerLiteral[65]" [color=red, constraint=false]
"IntegerLiteral[65]" -> "AssignSimpleExpr[63]" [color=blue, constraint=false, xlabel=" "] 
"IntegerLiteral[65]" -> "GTExpr[56]" [color=red, constraint=false]
"Exit[8]" -> "VariableDeclarator[71]" [color=red, constraint=false]
"VariableDeclarator[71]" -> "Exit[8]" [color=blue, constraint=false, xlabel=" "] 
"VariableDeclarator[71]" -> "LTExpr[53]" [color=red, constraint=false]
"VariableDeclarator[71]" -> "GTExpr[56]" [color=red, constraint=false]
"GTExpr[56]" -> "IntegerLiteral[65]" [color=blue, constraint=false, xlabel="T "] 
"GTExpr[56]" -> "VariableDeclarator[71]" [color=blue, constraint=false, xlabel="F "] 
"GTExpr[56]" -> "IntegerLiteral[58]" [color=red, constraint=false]
"IntegerLiteral[58]" -> "GTExpr[56]" [color=blue, constraint=false, xlabel=" "] 
"IntegerLiteral[58]" -> "VarAccess[57]" [color=red, constraint=false]
"VarAccess[57]" -> "IntegerLiteral[58]" [color=blue, constraint=false, xlabel=" "] 
"VarAccess[57]" -> "LTExpr[53]" [color=red, constraint=false]
"LTExpr[53]" -> "VarAccess[57]" [color=blue, constraint=false, xlabel="T "] 
"LTExpr[53]" -> "VariableDeclarator[71]" [color=blue, constraint=false, xlabel="F "] 
"LTExpr[53]" -> "IntegerLiteral[55]" [color=red, constraint=false]
"IntegerLiteral[55]" -> "LTExpr[53]" [color=blue, constraint=false, xlabel=" "] 
"IntegerLiteral[55]" -> "VarAccess[54]" [color=red, constraint=false]
"VarAccess[54]" -> "IntegerLiteral[55]" [color=blue, constraint=false, xlabel=" "] 
"VarAccess[54]" -> "VariableDeclarator[45]" [color=red, constraint=false]
"VarAccess[54]" -> "AssignSimpleExpr[63]" [color=red, constraint=false]
"VariableDeclarator[45]" -> "VarAccess[54]" [color=blue, constraint=false, xlabel=" "] 
"VariableDeclarator[45]" -> "IntegerLiteral[48]" [color=red, constraint=false]
"IntegerLiteral[48]" -> "VariableDeclarator[45]" [color=blue, constraint=false, xlabel=" "] 
"IntegerLiteral[48]" -> "VariableDeclarator[36]" [color=red, constraint=false]
"VariableDeclarator[36]" -> "IntegerLiteral[48]" [color=blue, constraint=false, xlabel=" "] 
"VariableDeclarator[36]" -> "IntegerLiteral[39]" [color=red, constraint=false]
"IntegerLiteral[39]" -> "VariableDeclarator[36]" [color=blue, constraint=false, xlabel=" "] 
"IntegerLiteral[39]" -> "Entry[7]" [color=red, constraint=false]
"Entry[7]" -> "IntegerLiteral[39]" [color=blue, constraint=false, xlabel=" "] 
"List[3]" -> "List[4]" [style=invis]
"InstanceInitialization[14]" -> "InstanceInitialization[6]" -> "Modifiers[22]" -> "Opt[25]" -> "List[26]" -> "List[27]" [style=invis]
"VarDeclStmt[31]" -> "VarDeclStmt[40]" -> "ForStmt[49]" -> "VarDeclStmt[66]" [style=invis]
"Modifiers[32]" -> "PrimitiveTypeAccess[34]" -> "List[35]" [style=invis]
"List[37]" -> "Opt[38]" [style=invis]
"Modifiers[41]" -> "PrimitiveTypeAccess[43]" -> "List[44]" [style=invis]
"List[46]" -> "Opt[47]" [style=invis]
"List[50]" -> "Opt[51]" -> "List[59]" -> "Block[60]" [style=invis]
"LTExpr[53]" -> "GTExpr[56]" [style=invis]
"VarAccess[54]" -> "IntegerLiteral[55]" [style=invis]
"VarAccess[57]" -> "IntegerLiteral[58]" [style=invis]
"VarAccess[64]" -> "IntegerLiteral[65]" [style=invis]
"Modifiers[67]" -> "PrimitiveTypeAccess[69]" -> "List[70]" [style=invis]
"List[72]" -> "Opt[73]" [style=invis]
"Entry[7]" -> "Exit[8]" [style=invis]
"Entry[15]" -> "Exit[16]" [style=invis]

subgraph cluster_legend {
{node [style=filled, fillcolor=1, colorscheme="pastel13"]
Nodes [label="Total Nr. Nodes
64", fillcolor=1]
Edges [label="Total Nr. Edges
97", fillcolor=1]
NodesCFG [label="CFG Nr. Nodes
16", fillcolor=3]
EdgesCFG [label="CFG Nr. Edges
17", fillcolor=3]
Nodes-> "Program[0]" -> NodesCFG  [style="invis"]
Edges -> "Program[0]" ->EdgesCFG [style="invis"]}
label = "Statistics of the framework: NEXTFramework"
style="solid"
ranksep=0.05
nodesep=0.01
labelloc = b
len=2
}}