{"cases":[{"nestedProperties":[],"assertType":"IDENTITY","src":{"mainArgs":[],"cache":"FULL","posRecovery":"ALTERNATE_PARENT_CHILD","tmpSuffix":".java","text":"// Example from http://web.cs.ucla.edu/~palsberg/tba/papers/dean-grove-chambers-ecoop95.pdf\n\nclass H extends F {}\n\nclass G extends F {}\n\nclass F extends C {\n  @Override\n  void p() {\n  }\n}\n\nclass E extends C {\n  @Override\n  void m() {\n  }\n}\n\nclass D extends B {\n}\n\nclass C extends A {\n  @Override\n  void m() {\n  }\n}\n\nclass B extends A {\n  @Override\n  void m() {\n  }\n}\n\nclass A {\n  void m() {\n  }\n\n  void p() {\n  }\n}"},"name":"1","property":{"name":"testCHA"},"expectedOutput":[{"type":"plain","value":"H :> []"},{"type":"plain","value":"H <: [A, C, F]"},{"type":"plain","value":"G :> []"},{"type":"plain","value":"G <: [A, C, F]"},{"type":"plain","value":"F :> [G, H]"},{"type":"plain","value":"F <: [A, C]"},{"type":"plain","value":"E :> []"},{"type":"plain","value":"E <: [A, C]"},{"type":"plain","value":"D :> []"},{"type":"plain","value":"D <: [A, B]"},{"type":"plain","value":"C :> [E, F, G, H]"},{"type":"plain","value":"C <: [A]"},{"type":"plain","value":"B :> [D]"},{"type":"plain","value":"B <: [A]"},{"type":"plain","value":"A :> [B, C, D, E, F, G, H]"},{"type":"plain","value":"A <: []"}],"locator":{"result":{"external":false,"depth":0,"start":12289,"end":163841,"type":"org.extendj.ast.Program"},"steps":[]}},{"nestedProperties":[],"assertType":"IDENTITY","src":{"mainArgs":[],"cache":"FULL","posRecovery":"ALTERNATE_PARENT_CHILD","tmpSuffix":".java","text":"class Vehicle {\n    void start() {\n    }\n}\n\nclass Car extends Vehicle {\n    void start() {\n    }\n    \n    void accelerate() {\n    }\n}\n\nclass Bike extends Vehicle {\n    void start() {\n    }\n    \n    void pedal() {\n    }\n}"},"name":"2","property":{"name":"testCHA"},"expectedOutput":[{"type":"plain","value":"Vehicle :> [Bike, Car]"},{"type":"plain","value":"Vehicle <: []"},{"type":"plain","value":"Car :> []"},{"type":"plain","value":"Car <: [Vehicle]"},{"type":"plain","value":"Bike :> []"},{"type":"plain","value":"Bike <: [Vehicle]"}],"locator":{"result":{"external":false,"depth":0,"start":4097,"end":81921,"type":"org.extendj.ast.Program"},"steps":[]}},{"nestedProperties":[],"assertType":"IDENTITY","src":{"mainArgs":[],"cache":"FULL","posRecovery":"ALTERNATE_PARENT_CHILD","tmpSuffix":".java","text":"interface Drivable {\n    void drive();\n}\n\ninterface Flyable {\n    void fly();\n}\n\nclass Vehicle {\n    void start() {\n    }\n}\n\nclass Car extends Vehicle implements Drivable {\n    public void drive() {\n    }\n    \n    void accelerate() {\n    }\n}\n\nclass Airplane extends Vehicle implements Flyable {\n    public void fly() {\n    }\n    \n    void takeOff() {\n    }\n}"},"name":"3","property":{"name":"testCHA"},"expectedOutput":[{"type":"plain","value":"Drivable :> [Car]"},{"type":"plain","value":"Drivable <: []"},{"type":"plain","value":"Flyable :> [Airplane]"},{"type":"plain","value":"Flyable <: []"},{"type":"plain","value":"Vehicle :> [Airplane, Car]"},{"type":"plain","value":"Vehicle <: []"},{"type":"plain","value":"Car :> []"},{"type":"plain","value":"Car <: [Drivable, Vehicle]"},{"type":"plain","value":"Airplane :> []"},{"type":"plain","value":"Airplane <: [Flyable, Vehicle]"}],"locator":{"result":{"external":false,"depth":0,"start":4097,"end":106498,"type":"org.extendj.ast.Program"},"steps":[]}},{"nestedProperties":[],"assertType":"IDENTITY","src":{"mainArgs":[],"cache":"FULL","posRecovery":"ALTERNATE_PARENT_CHILD","tmpSuffix":".java","text":"interface A {\n    default void show() {\n        System.out.println(\"A\");\n    }\n}\n\ninterface B extends A {\n    default void show() {\n        System.out.println(\"B\");\n    }\n}\n\ninterface C extends A {\n    default void show() {\n        System.out.println(\"C\");\n    }\n}\n\nclass D implements B, C {\n    public void show() {\n        B.super.show();  \n        C.super.show();  \n    }\n}"},"name":"4","property":{"name":"testCHA"},"expectedOutput":[{"type":"plain","value":"A :> [B, C, D]"},{"type":"plain","value":"A <: []"},{"type":"plain","value":"B :> [D]"},{"type":"plain","value":"B <: [A]"},{"type":"plain","value":"C :> [D]"},{"type":"plain","value":"C <: [A]"},{"type":"plain","value":"D :> []"},{"type":"plain","value":"D <: [A, B, C]"}],"locator":{"result":{"external":false,"depth":0,"start":4097,"end":98305,"type":"org.extendj.ast.Program"},"steps":[]}},{"nestedProperties":[],"assertType":"IDENTITY","src":{"mainArgs":[],"cache":"FULL","posRecovery":"ALTERNATE_PARENT_CHILD","tmpSuffix":".java","text":"interface SoundProducer {\n    void makeSound();\n}\n\ninterface Movable {\n    void move();\n}\n\nclass LivingThing {\n    void breathe() {\n        System.out.println(\"Living thing is breathing.\");\n    }\n}\n\nclass Animal extends LivingThing implements SoundProducer {\n    public void makeSound() {\n        System.out.println(\"Animal is making a sound.\");\n    }\n}\n\nclass Vehicle implements Movable {\n    public void move() {\n        System.out.println(\"Vehicle is moving.\");\n    }\n}\n\nclass Cat extends Animal {\n    public void makeSound() {\n        System.out.println(\"Cat is meowing.\");\n    }\n}\n\nclass Car extends Vehicle {\n    public void move() {\n        System.out.println(\"Car is driving.\");\n    }\n}\n\nclass Robot implements Movable {\n    public void move() {\n        System.out.println(\"Robot is walking.\");\n    }\n    \n    void speak() {\n        System.out.println(\"Robot is speaking.\");\n    }\n}\n"},"name":"5","property":{"name":"testCHA"},"expectedOutput":[{"type":"plain","value":"SoundProducer :> [Animal, Cat]"},{"type":"plain","value":"SoundProducer <: []"},{"type":"plain","value":"Movable :> [Car, Robot, Vehicle]"},{"type":"plain","value":"Movable <: []"},{"type":"plain","value":"LivingThing :> [Animal, Cat]"},{"type":"plain","value":"LivingThing <: []"},{"type":"plain","value":"Animal :> [Cat]"},{"type":"plain","value":"Animal <: [LivingThing, SoundProducer]"},{"type":"plain","value":"Vehicle :> [Car]"},{"type":"plain","value":"Vehicle <: [Movable]"},{"type":"plain","value":"Cat :> []"},{"type":"plain","value":"Cat <: [Animal, LivingThing, SoundProducer]"},{"type":"plain","value":"Car :> []"},{"type":"plain","value":"Car <: [Movable, Vehicle]"},{"type":"plain","value":"Robot :> []"},{"type":"plain","value":"Robot <: [Movable]"}],"locator":{"result":{"external":false,"depth":0,"start":4097,"end":192513,"type":"org.extendj.ast.Program"},"steps":[]}},{"nestedProperties":[],"assertType":"IDENTITY","src":{"mainArgs":[],"cache":"FULL","posRecovery":"ALTERNATE_PARENT_CHILD","tmpSuffix":".java","text":"interface Box<T> {\n\n}\n\nclass MyBox<T> implements Box<T> {\n\n}"},"name":"6","property":{"name":"testCHA"},"expectedOutput":[{"type":"plain","value":"Box :> [MyBox]"},{"type":"plain","value":"Box <: []"},{"type":"plain","value":"MyBox :> []"},{"type":"plain","value":"MyBox <: [Box]"}],"locator":{"result":{"external":false,"depth":0,"start":4097,"end":28673,"type":"org.extendj.ast.Program"},"steps":[]}},{"nestedProperties":[],"assertType":"IDENTITY","src":{"mainArgs":[],"cache":"FULL","posRecovery":"ALTERNATE_PARENT_CHILD","tmpSuffix":".java","text":"interface Z{}\n\ninterface A<T1, T2> extends Z {\n    \n}\n\nclass B implements A<String, Integer> {\n}"},"name":"7","property":{"name":"testCHA"},"expectedOutput":[{"type":"plain","value":"Z :> [A, B]"},{"type":"plain","value":"Z <: []"},{"type":"plain","value":"A :> [B]"},{"type":"plain","value":"A <: [Z]"},{"type":"plain","value":"B :> []"},{"type":"plain","value":"B <: [A, Z]"}],"locator":{"result":{"external":false,"depth":0,"start":4097,"end":32769,"type":"org.extendj.ast.Program"},"steps":[]}}],"v":1}